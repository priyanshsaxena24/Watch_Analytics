{"ast":null,"code":"var _jsxFileName = \"/Users/priyanshsaxena/Documents/SummerProjects/Watch_Analytics/frontend/youtube-watch-analytics/src/ChartPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport data from './data.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst processData = data => {\n  const totalWatchTime = {};\n  const mostViewedChannel = {};\n  const mostViewedCategory = {};\n  for (const day in data) {\n    if (data[day].length === 0) {\n      totalWatchTime[day] = null;\n      mostViewedChannel[day] = null;\n      mostViewedCategory[day] = null;\n    } else {\n      totalWatchTime[day] = 0;\n      mostViewedChannel[day] = {};\n      mostViewedCategory[day] = {};\n      data[day].forEach(video => {\n        totalWatchTime[day] += video.watchTime;\n        if (mostViewedChannel[day][video.channelName]) {\n          mostViewedChannel[day][video.channelName] += video.watchTime;\n        } else {\n          mostViewedChannel[day][video.channelName] = video.watchTime;\n        }\n        if (mostViewedCategory[day][video.category]) {\n          mostViewedCategory[day][video.category] += video.watchTime;\n        } else {\n          mostViewedCategory[day][video.category] = video.watchTime;\n        }\n      });\n    }\n  }\n  return {\n    totalWatchTime,\n    mostViewedChannel,\n    mostViewedCategory\n  };\n};\nconst ChartPage = () => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  useEffect(() => {\n    const {\n      totalWatchTime,\n      mostViewedChannel,\n      mostViewedCategory\n    } = processData(data);\n    const labels = Object.keys(data);\n    const totalWatchTimeData = labels.map(day => totalWatchTime[day] !== null ? totalWatchTime[day] : 0);\n    const findMaxKey = obj => {\n      return obj ? Object.keys(obj).reduce((a, b) => obj[a] > obj[b] ? a : b) : null;\n    };\n    const mostViewedChannelData = labels.map(day => {\n      const channel = findMaxKey(mostViewedChannel[day]);\n      return channel ? {\n        day,\n        channel,\n        watchTime: mostViewedChannel[day][channel]\n      } : {\n        day,\n        channel: 'No Data',\n        watchTime: 0\n      };\n    });\n    const mostViewedCategoryData = labels.map(day => {\n      const category = findMaxKey(mostViewedCategory[day]);\n      return category ? {\n        day,\n        category,\n        watchTime: mostViewedCategory[day][category]\n      } : {\n        day,\n        category: 'No Data',\n        watchTime: 0\n      };\n    });\n    setChartData({\n      labels,\n      totalWatchTimeData,\n      mostViewedChannelData,\n      mostViewedCategoryData\n    });\n  }, []);\n  if (!chartData) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 26\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"YouTube Watch Analytics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Total Watch Time (Day/Date Wise)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: {\n        labels: chartData.labels,\n        datasets: [{\n          label: 'Total Watch Time (seconds)',\n          data: chartData.totalWatchTimeData,\n          backgroundColor: 'rgba(75, 192, 192, 0.2)',\n          borderColor: 'rgba(75, 192, 192, 1)',\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Most Viewed Channel (Day/Date Wise)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: {\n        labels: chartData.labels,\n        datasets: [{\n          label: 'Most Viewed Channel',\n          data: chartData.mostViewedChannelData.map(item => item.watchTime),\n          backgroundColor: 'rgba(153, 102, 255, 0.2)',\n          borderColor: 'rgba(153, 102, 255, 1)',\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        },\n        plugins: {\n          tooltip: {\n            callbacks: {\n              label: function (context) {\n                return `${chartData.mostViewedChannelData[context.dataIndex].channel}: ${context.raw} seconds`;\n              }\n            }\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Most Viewed Category (Day/Date Wise)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: {\n        labels: chartData.labels,\n        datasets: [{\n          label: 'Most Viewed Category',\n          data: chartData.mostViewedCategoryData.map(item => item.watchTime),\n          backgroundColor: 'rgba(255, 159, 64, 0.2)',\n          borderColor: 'rgba(255, 159, 64, 1)',\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        },\n        plugins: {\n          tooltip: {\n            callbacks: {\n              label: function (context) {\n                return `${chartData.mostViewedCategoryData[context.dataIndex].category}: ${context.raw} seconds`;\n              }\n            }\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(ChartPage, \"9euvDhZ+n6eLTlbzwvHmNPhoqAw=\");\n_c = ChartPage;\nexport default ChartPage;\nvar _c;\n$RefreshReg$(_c, \"ChartPage\");","map":{"version":3,"names":["React","useEffect","useState","Bar","data","jsxDEV","_jsxDEV","processData","totalWatchTime","mostViewedChannel","mostViewedCategory","day","length","forEach","video","watchTime","channelName","category","ChartPage","_s","chartData","setChartData","labels","Object","keys","totalWatchTimeData","map","findMaxKey","obj","reduce","a","b","mostViewedChannelData","channel","mostViewedCategoryData","children","fileName","_jsxFileName","lineNumber","columnNumber","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","y","beginAtZero","item","plugins","tooltip","callbacks","context","dataIndex","raw","_c","$RefreshReg$"],"sources":["/Users/priyanshsaxena/Documents/SummerProjects/Watch_Analytics/frontend/youtube-watch-analytics/src/ChartPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport data from './data.json';\n\nconst processData = (data) => {\n  const totalWatchTime = {};\n  const mostViewedChannel = {};\n  const mostViewedCategory = {};\n\n  for (const day in data) {\n    if (data[day].length === 0) {\n      totalWatchTime[day] = null;\n      mostViewedChannel[day] = null;\n      mostViewedCategory[day] = null;\n    } else {\n      totalWatchTime[day] = 0;\n      mostViewedChannel[day] = {};\n      mostViewedCategory[day] = {};\n\n      data[day].forEach(video => {\n        totalWatchTime[day] += video.watchTime;\n\n        if (mostViewedChannel[day][video.channelName]) {\n          mostViewedChannel[day][video.channelName] += video.watchTime;\n        } else {\n          mostViewedChannel[day][video.channelName] = video.watchTime;\n        }\n\n        if (mostViewedCategory[day][video.category]) {\n          mostViewedCategory[day][video.category] += video.watchTime;\n        } else {\n          mostViewedCategory[day][video.category] = video.watchTime;\n        }\n      });\n    }\n  }\n\n  return { totalWatchTime, mostViewedChannel, mostViewedCategory };\n};\n\nconst ChartPage = () => {\n  const [chartData, setChartData] = useState(null);\n\n  useEffect(() => {\n    const { totalWatchTime, mostViewedChannel, mostViewedCategory } = processData(data);\n\n    const labels = Object.keys(data);\n    const totalWatchTimeData = labels.map(day => totalWatchTime[day] !== null ? totalWatchTime[day] : 0);\n\n    const findMaxKey = (obj) => {\n      return obj ? Object.keys(obj).reduce((a, b) => (obj[a] > obj[b] ? a : b)) : null;\n    };\n\n    const mostViewedChannelData = labels.map(day => {\n      const channel = findMaxKey(mostViewedChannel[day]);\n      return channel ? { day, channel, watchTime: mostViewedChannel[day][channel] } : { day, channel: 'No Data', watchTime: 0 };\n    });\n\n    const mostViewedCategoryData = labels.map(day => {\n      const category = findMaxKey(mostViewedCategory[day]);\n      return category ? { day, category, watchTime: mostViewedCategory[day][category] } : { day, category: 'No Data', watchTime: 0 };\n    });\n\n    setChartData({\n      labels,\n      totalWatchTimeData,\n      mostViewedChannelData,\n      mostViewedCategoryData\n    });\n  }, []);\n\n  if (!chartData) return <div>Loading...</div>;\n\n  return (\n    <div>\n      <h1>YouTube Watch Analytics</h1>\n      \n      <h2>Total Watch Time (Day/Date Wise)</h2>\n      <Bar \n        data={{\n          labels: chartData.labels,\n          datasets: [{\n            label: 'Total Watch Time (seconds)',\n            data: chartData.totalWatchTimeData,\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 1\n          }]\n        }}\n        options={{\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }}\n      />\n      \n      <h2>Most Viewed Channel (Day/Date Wise)</h2>\n      <Bar \n        data={{\n          labels: chartData.labels,\n          datasets: [{\n            label: 'Most Viewed Channel',\n            data: chartData.mostViewedChannelData.map(item => item.watchTime),\n            backgroundColor: 'rgba(153, 102, 255, 0.2)',\n            borderColor: 'rgba(153, 102, 255, 1)',\n            borderWidth: 1\n          }]\n        }}\n        options={{\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          },\n          plugins: {\n            tooltip: {\n              callbacks: {\n                label: function(context) {\n                  return `${chartData.mostViewedChannelData[context.dataIndex].channel}: ${context.raw} seconds`;\n                }\n              }\n            }\n          }\n        }}\n      />\n      \n      <h2>Most Viewed Category (Day/Date Wise)</h2>\n      <Bar \n        data={{\n          labels: chartData.labels,\n          datasets: [{\n            label: 'Most Viewed Category',\n            data: chartData.mostViewedCategoryData.map(item => item.watchTime),\n            backgroundColor: 'rgba(255, 159, 64, 0.2)',\n            borderColor: 'rgba(255, 159, 64, 1)',\n            borderWidth: 1\n          }]\n        }}\n        options={{\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          },\n          plugins: {\n            tooltip: {\n              callbacks: {\n                label: function(context) {\n                  return `${chartData.mostViewedCategoryData[context.dataIndex].category}: ${context.raw} seconds`;\n                }\n              }\n            }\n          }\n        }}\n      />\n    </div>\n  );\n};\n\nexport default ChartPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}