{"ast":null,"code":"var _jsxFileName = \"/Users/priyanshsaxena/Documents/SummerProjects/Watch_Analytics/frontend/youtube-watch-analytics/src/ChartPage.js\";\nimport React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport data from './data.json'; // Assume the JSON data is in a file called data.json\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst processData = data => {\n  const totalWatchTime = {};\n  const mostViewedChannel = {};\n  const mostViewedCategory = {};\n  for (const day in data) {\n    totalWatchTime[day] = 0;\n    mostViewedChannel[day] = {};\n    mostViewedCategory[day] = {};\n    data[day].forEach(video => {\n      totalWatchTime[day] += video.watchTime;\n      if (mostViewedChannel[day][video.channelName]) {\n        mostViewedChannel[day][video.channelName] += video.watchTime;\n      } else {\n        mostViewedChannel[day][video.channelName] = video.watchTime;\n      }\n      if (mostViewedCategory[day][video.category]) {\n        mostViewedCategory[day][video.category] += video.watchTime;\n      } else {\n        mostViewedCategory[day][video.category] = video.watchTime;\n      }\n    });\n  }\n  return {\n    totalWatchTime,\n    mostViewedChannel,\n    mostViewedCategory\n  };\n};\nconst {\n  totalWatchTime,\n  mostViewedChannel,\n  mostViewedCategory\n} = processData(data);\nconst findMaxKey = obj => {\n  return Object.keys(obj).reduce((a, b) => obj[a] > obj[b] ? a : b);\n};\nconst labels = Object.keys(data);\nconst totalWatchTimeData = labels.map(day => totalWatchTime[day]);\nconst mostViewedChannelData = labels.map(day => {\n  const channel = findMaxKey(mostViewedChannel[day]);\n  return {\n    day,\n    channel,\n    watchTime: mostViewedChannel[day][channel]\n  };\n});\nconst mostViewedCategoryData = labels.map(day => {\n  const category = findMaxKey(mostViewedCategory[day]);\n  return {\n    day,\n    category,\n    watchTime: mostViewedCategory[day][category]\n  };\n});\nconst ChartPage = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"YouTube Watch Analytics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Total Watch Time (Day/Date Wise)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: {\n        labels,\n        datasets: [{\n          label: 'Total Watch Time (seconds)',\n          data: totalWatchTimeData,\n          backgroundColor: 'rgba(75, 192, 192, 0.2)',\n          borderColor: 'rgba(75, 192, 192, 1)',\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Most Viewed Channel (Day/Date Wise)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: {\n        labels,\n        datasets: [{\n          label: 'Most Viewed Channel',\n          data: mostViewedChannelData.map(item => item.watchTime),\n          backgroundColor: 'rgba(153, 102, 255, 0.2)',\n          borderColor: 'rgba(153, 102, 255, 1)',\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        },\n        plugins: {\n          tooltip: {\n            callbacks: {\n              label: function (context) {\n                return `${mostViewedChannelData[context.dataIndex].channel}: ${context.raw} seconds`;\n              }\n            }\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Most Viewed Category (Day/Date Wise)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: {\n        labels,\n        datasets: [{\n          label: 'Most Viewed Category',\n          data: mostViewedCategoryData.map(item => item.watchTime),\n          backgroundColor: 'rgba(255, 159, 64, 0.2)',\n          borderColor: 'rgba(255, 159, 64, 1)',\n          borderWidth: 1\n        }]\n      },\n      options: {\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        },\n        plugins: {\n          tooltip: {\n            callbacks: {\n              label: function (context) {\n                return `${mostViewedCategoryData[context.dataIndex].category}: ${context.raw} seconds`;\n              }\n            }\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_c = ChartPage;\nexport default ChartPage;\nvar _c;\n$RefreshReg$(_c, \"ChartPage\");","map":{"version":3,"names":["React","Bar","data","jsxDEV","_jsxDEV","processData","totalWatchTime","mostViewedChannel","mostViewedCategory","day","forEach","video","watchTime","channelName","category","findMaxKey","obj","Object","keys","reduce","a","b","labels","totalWatchTimeData","map","mostViewedChannelData","channel","mostViewedCategoryData","ChartPage","children","fileName","_jsxFileName","lineNumber","columnNumber","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","y","beginAtZero","item","plugins","tooltip","callbacks","context","dataIndex","raw","_c","$RefreshReg$"],"sources":["/Users/priyanshsaxena/Documents/SummerProjects/Watch_Analytics/frontend/youtube-watch-analytics/src/ChartPage.js"],"sourcesContent":["import React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport data from './data.json'; // Assume the JSON data is in a file called data.json\n\nconst processData = (data) => {\n  const totalWatchTime = {};\n  const mostViewedChannel = {};\n  const mostViewedCategory = {};\n\n  for (const day in data) {\n    totalWatchTime[day] = 0;\n    mostViewedChannel[day] = {};\n    mostViewedCategory[day] = {};\n\n    data[day].forEach(video => {\n      totalWatchTime[day] += video.watchTime;\n\n      if (mostViewedChannel[day][video.channelName]) {\n        mostViewedChannel[day][video.channelName] += video.watchTime;\n      } else {\n        mostViewedChannel[day][video.channelName] = video.watchTime;\n      }\n\n      if (mostViewedCategory[day][video.category]) {\n        mostViewedCategory[day][video.category] += video.watchTime;\n      } else {\n        mostViewedCategory[day][video.category] = video.watchTime;\n      }\n    });\n  }\n\n  return { totalWatchTime, mostViewedChannel, mostViewedCategory };\n};\n\nconst { totalWatchTime, mostViewedChannel, mostViewedCategory } = processData(data);\n\nconst findMaxKey = (obj) => {\n  return Object.keys(obj).reduce((a, b) => (obj[a] > obj[b] ? a : b));\n};\n\nconst labels = Object.keys(data);\n\nconst totalWatchTimeData = labels.map(day => totalWatchTime[day]);\n\nconst mostViewedChannelData = labels.map(day => {\n  const channel = findMaxKey(mostViewedChannel[day]);\n  return { day, channel, watchTime: mostViewedChannel[day][channel] };\n});\n\nconst mostViewedCategoryData = labels.map(day => {\n  const category = findMaxKey(mostViewedCategory[day]);\n  return { day, category, watchTime: mostViewedCategory[day][category] };\n});\n\nconst ChartPage = () => {\n  return (\n    <div>\n      <h1>YouTube Watch Analytics</h1>\n      \n      <h2>Total Watch Time (Day/Date Wise)</h2>\n      <Bar \n        data={{\n          labels,\n          datasets: [{\n            label: 'Total Watch Time (seconds)',\n            data: totalWatchTimeData,\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 1\n          }]\n        }}\n        options={{\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }}\n      />\n      \n      <h2>Most Viewed Channel (Day/Date Wise)</h2>\n      <Bar \n        data={{\n          labels,\n          datasets: [{\n            label: 'Most Viewed Channel',\n            data: mostViewedChannelData.map(item => item.watchTime),\n            backgroundColor: 'rgba(153, 102, 255, 0.2)',\n            borderColor: 'rgba(153, 102, 255, 1)',\n            borderWidth: 1\n          }]\n        }}\n        options={{\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          },\n          plugins: {\n            tooltip: {\n              callbacks: {\n                label: function(context) {\n                  return `${mostViewedChannelData[context.dataIndex].channel}: ${context.raw} seconds`;\n                }\n              }\n            }\n          }\n        }}\n      />\n      \n      <h2>Most Viewed Category (Day/Date Wise)</h2>\n      <Bar \n        data={{\n          labels,\n          datasets: [{\n            label: 'Most Viewed Category',\n            data: mostViewedCategoryData.map(item => item.watchTime),\n            backgroundColor: 'rgba(255, 159, 64, 0.2)',\n            borderColor: 'rgba(255, 159, 64, 1)',\n            borderWidth: 1\n          }]\n        }}\n        options={{\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          },\n          plugins: {\n            tooltip: {\n              callbacks: {\n                label: function(context) {\n                  return `${mostViewedCategoryData[context.dataIndex].category}: ${context.raw} seconds`;\n                }\n              }\n            }\n          }\n        }}\n      />\n    </div>\n  );\n};\n\nexport default ChartPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}